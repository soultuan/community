<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuanzisama.community.mapper.MessageMapper">
    <select id="selectMessageListByUserId" resultType="Message">
        select id,from_id,to_id,conversation_id,content,status,create_time
        from message
        where id in (
            select max(id)
            from message
            where status != 2
            and from_id !=1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        and from_id != to_id
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="countMessageListByUserId" resultType="Integer">
        select count(*)
        from message
        where id in (
            select max(id)
            from message
            where status != 2
            and from_id !=1
            and from_id != to_id
            and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
            )
    </select>

    <select id="selectDetailMessageListByConversationId" resultType="Message">
        select id,from_id,to_id,conversation_id,content,status,create_time
        from message
        where conversation_id = #{conversationId}
        and status !=2
        and from_id !=1
        order by id
        limit #{offset},#{limit}
    </select>

    <select id="countDetailMessageListByConversationId" resultType="Integer">
        select count(*)
        from message
        where conversation_id = #{conversationId}
        and status !=2
        and from_id !=1
    </select>

    <select id="countUnreadMessageList" resultType="Integer">
        select count(*)
        FROM message
        <where>
            status = 0
            and from_id != 1
            <if test="conversationId!=null">
                and conversation_id = #{conversationId}
            </if>
            and to_id = #{userId}
        </where>
    </select>

    <select id="selectLatestEvent" resultType="Message">
        select id,from_id,to_id,conversation_id,content,status,create_time
        from message
        where id in(
            select max(id)
            from message
            where status != 2
            and from_id = 1
            and to_id = #{userId}
            and conversation_id = #{entityType}
            )
    </select>

    <select id="countEvent" resultType="Integer">
        select count(id)
        from message
        where status != 2
            and from_id = 1
            and to_id = #{userId}
            and conversation_id = #{entityType}
    </select>

    <select id="countUnreadEvent" resultType="Integer">
        select count(id)
        from message
        where status = 0
            and from_id = 1
            and to_id = #{userId}
        <if test="entityType!=null">
            and conversation_id = #{entityType}
        </if>
    </select>

    <select id="selectNotices" resultType="Message">
        select id,from_id,to_id,conversation_id,content,status,create_time
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <insert id="insertMessage" parameterType="Message" useGeneratedKeys="true" keyProperty="id">
        insert into message(from_id,to_id,conversation_id,content,status,create_time)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateMessageWithStatus">
        update message
        set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
</mapper>